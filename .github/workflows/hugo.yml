name: Deploy Hugo site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          echo "Installing npm dependencies..."
          npm install
          echo "npm dependencies installed successfully"

      - name: Build with Hugo
        run: |
          echo "Starting build process..."
          
          # Create public directory
          mkdir -p public
          echo "Created public directory"
          
          # Run npm build
          echo "Running npm build..."
          npm run build || {
            echo "npm build failed"
            exit 1
          }
          echo "npm build completed successfully"
          
          # List contents of .build directory
          echo "Contents of .build directory:"
          ls -la .build/
          
          # Copy files to public directory
          echo "Copying files to public directory..."
          cp -r .build/* public/ || {
            echo "Failed to copy files to public directory"
            exit 1
          }
          echo "Files copied successfully"
          
          # Create directories and copy files
          echo "Creating custom URL structure..."
          
          # Create root index.html (landing page)
          if [ -f "public/landing/NGO/index.html" ]; then
            cp public/landing/NGO/index.html public/index.html
            echo "Created root index.html"
          else
            echo "Error: public/landing/NGO/index.html not found"
            exit 1
          fi
          
          # Create contact page
          if [ -f "public/contact/contact/index.html" ]; then
            mkdir -p public/contact-us
            cp public/contact/contact/index.html public/contact-us/index.html
            echo "Created contact-us page"
          else
            echo "Error: public/contact/contact/index.html not found"
            exit 1
          fi
          
          # Create about page
          if [ -f "public/about/about/index.html" ]; then
            mkdir -p public/about-us
            cp public/about/about/index.html public/about-us/index.html
            echo "Created about-us page"
          else
            echo "Error: public/about/about/index.html not found"
            exit 1
          fi
          
          # Create articles directory and move blog homepage
          if [ -f "public/blog/homepage/index.html" ]; then
            mkdir -p public/articles
            cp public/blog/homepage/index.html public/articles/index.html
            echo "Created articles homepage"
          else
            echo "Error: public/blog/homepage/index.html not found"
            exit 1
          fi
          
          # Move individual articles
          if [ -f "public/blog/article/index.html" ]; then
            mkdir -p public/articles/article1
            cp public/blog/article/index.html public/articles/article1/index.html
            echo "Created article1 page"
          else
            echo "Error: public/blog/article/index.html not found"
            exit 1
          fi
          
          if [ -f "public/blog/article2/index.html" ]; then
            mkdir -p public/articles/article2
            cp public/blog/article2/index.html public/articles/article2/index.html
            echo "Created article2 page"
          else
            echo "Error: public/blog/article2/index.html not found"
            exit 1
          fi
          
          # Fix URLs in all HTML files
          echo "Fixing URLs in HTML files..."
          find public -type f -name "*.html" -exec sed -i 's|http://localhost:1313/|/|g' {} \;
          find public -type f -name "*.html" -exec sed -i 's|/landing/NGO/|/|g' {} \;
          find public -type f -name "*.html" -exec sed -i 's|/contact/contact/|/contact-us/|g' {} \;
          find public -type f -name "*.html" -exec sed -i 's|/about/about/|/about-us/|g' {} \;
          find public -type f -name "*.html" -exec sed -i 's|/blog/homepage/|/articles/|g' {} \;
          find public -type f -name "*.html" -exec sed -i 's|/blog/article/|/articles/article1/|g' {} \;
          find public -type f -name "*.html" -exec sed -i 's|/blog/article2/|/articles/article2/|g' {} \;
          echo "URLs fixed successfully"
          
          # Debug: List contents of public directory
          echo "Final contents of public directory:"
          ls -la public/
          echo "Contents of public/articles directory:"
          ls -la public/articles/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 